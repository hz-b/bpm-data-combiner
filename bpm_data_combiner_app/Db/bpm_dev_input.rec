# Input data collected from the different bpm devices

# First get the data into here ...
# Input of one record device ... collect them here
# locally (again)
# so one can check what the IOC uses
record(longin, "$(PREFIX)$(DEV_NAME):x")
{
    field(DESC, "mirror: x value $(REMOTE)")
    field(EGU, "nm")
    field(INP, {pva:{
        pv:"$(REMOTE)$(DEV_NAME)",
	field:"x",
	proc:true,
	}}
    )
    field(FLNK, "$(PREFIX)$(DEV_NAME):im:x")
    field(VAL, -100000000)
    field(PINI, "YES")
}

record(longin, "$(PREFIX)$(DEV_NAME):y")
{
    field(DESC, "mirror: y value")
    field(EGU, "nm")
    field(INP, {pva:{
        pv:"$(REMOTE)$(DEV_NAME)",
	field:"y",
	proc:true,
	}}
    )
    field(FLNK, "$(PREFIX)$(DEV_NAME):im:y")
    field(VAL, -100000000)
    field(PINI, "YES")
}

record(longin, "$(PREFIX)$(DEV_NAME):cnt")
{
    field(DESC, "mirror: (time) cnt")
    field(INP, {pva:{
        pv:"$(REMOTE)$(DEV_NAME)",
	field:"cnt",
	proc:true
	}}
    )
    field(FLNK, "$(PREFIX)$(DEV_NAME):im:cnt")
    field(VAL, -1)
    field(PINI, "YES")
}

record(stringin, "$(PREFIX)$(DEV_NAME):name")
{
    field(DESC, "mirror: name")
    field(INP, {pva:{
        pv:"$(REMOTE)$(DEV_NAME)",
	field:"cfg.name",
	proc:true,
	}}
    )
    field(VAL, "unknown")
    field(PINI, "YES")
    field(FLNK, "$(PREFIX)$(DEV_NAME):im:name")
    field(VAL, "unknown")
    field(PINI, "YES")
}

# Now the records to push the info further to python
record(longout, "$(PREFIX)$(DEV_NAME):im:x")
{
    field(DTYP, "pydev")
    field(DOL, "$(PREFIX)$(DEV_NAME):x")
    field(OMSL, "closed_loop")
    field(OUT, "@update(dev_name='$(DEV_NAME)', x=%VAL%)")
    field(VAL, -1)
    field(PINI, "YES")
    # field(TPRO, 1)
}

record(longout, "$(PREFIX)$(DEV_NAME):im:y")
{
    field(DTYP, "pydev")
    field(DOL, "$(PREFIX)$(DEV_NAME):y")
    field(OMSL, "closed_loop")
    field(OUT, "@update(dev_name='$(DEV_NAME)', y=%VAL%)")
    field(VAL, -1)
    field(PINI, "YES")
    # field(TPRO, 1)
}

record(longout, "$(PREFIX)$(DEV_NAME):im:cnt")
{
    field(DTYP, "pydev")
    field(DOL, "$(PREFIX)$(DEV_NAME):cnt")
    field(OMSL, "closed_loop")
    field(OUT, "@update(dev_name='$(DEV_NAME)', cnt=%VAL%)")
    field(VAL, -1)
    field(PINI, "YES")
    # field(TPRO, 1)
}

record(stringout, "$(PREFIX)$(DEV_NAME):im:name")
{
    field(DTYP, "pydev")
    field(DOL, "$(PREFIX)$(DEV_NAME):name")
    field(OMSL, "closed_loop")
    field(OUT, "@update(dev_name='$(DEV_NAME)', name='%VAL%')")
    field(VAL, "unknown")
    field(PINI, "YES")
    # field(TPRO, 1)
}
